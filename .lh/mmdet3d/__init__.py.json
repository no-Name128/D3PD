{
    "sourceFile": "mmdet3d/__init__.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1716005674154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716009344921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,16 @@\n             digit_version.append(int(patch_version[1]))\n     return digit_version\n \n \n-mmcv_minimum_version = '1.5.2'\n-mmcv_maximum_version = '1.7.0'\n+# mmcv_minimum_version = '1.5.2'\n+# mmcv_maximum_version = '1.7.0'\n+# mmcv_version = digit_version(mmcv.__version__)\n+\n+mmcv_minimum_version = '1.3.8'\n+mmcv_maximum_version = '1.4.0'\n mmcv_version = digit_version(mmcv.__version__)\n \n-\n assert (mmcv_version >= digit_version(mmcv_minimum_version)\n         and mmcv_version <= digit_version(mmcv_maximum_version)), \\\n     f'MMCV=={mmcv.__version__} is used but incompatible. ' \\\n     f'Please install mmcv>={mmcv_minimum_version}, <={mmcv_maximum_version}.'\n"
                },
                {
                    "date": 1716009367674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,11 @@\n         and mmcv_version <= digit_version(mmcv_maximum_version)), \\\n     f'MMCV=={mmcv.__version__} is used but incompatible. ' \\\n     f'Please install mmcv>={mmcv_minimum_version}, <={mmcv_maximum_version}.'\n \n-mmdet_minimum_version = '2.24.0'\n+# mmdet_minimum_version = '2.24.0'\n+# mmdet_maximum_version = '3.0.0'\n+mmdet_minimum_version = '2.14.0'\n mmdet_maximum_version = '3.0.0'\n mmdet_version = digit_version(mmdet.__version__)\n assert (mmdet_version >= digit_version(mmdet_minimum_version)\n         and mmdet_version <= digit_version(mmdet_maximum_version)), \\\n"
                },
                {
                    "date": 1716009377963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,11 @@\n     f'MMDET=={mmdet.__version__} is used but incompatible. ' \\\n     f'Please install mmdet>={mmdet_minimum_version}, ' \\\n     f'<={mmdet_maximum_version}.'\n \n-mmseg_minimum_version = '0.20.0'\n+# mmseg_minimum_version = '0.20.0'\n+# mmseg_maximum_version = '1.0.0'\n+mmseg_minimum_version = '0.14.1'\n mmseg_maximum_version = '1.0.0'\n mmseg_version = digit_version(mmseg.__version__)\n assert (mmseg_version >= digit_version(mmseg_minimum_version)\n         and mmseg_version <= digit_version(mmseg_maximum_version)), \\\n"
                }
            ],
            "date": 1716005674154,
            "name": "Commit-0",
            "content": "# Copyright (c) OpenMMLab. All rights reserved.\nimport mmcv\n\nimport mmdet\nimport mmseg\nfrom .version import __version__, short_version\n\n\ndef digit_version(version_str):\n    digit_version = []\n    for x in version_str.split('.'):\n        if x.isdigit():\n            digit_version.append(int(x))\n        elif x.find('rc') != -1:\n            patch_version = x.split('rc')\n            digit_version.append(int(patch_version[0]) - 1)\n            digit_version.append(int(patch_version[1]))\n    return digit_version\n\n\nmmcv_minimum_version = '1.5.2'\nmmcv_maximum_version = '1.7.0'\nmmcv_version = digit_version(mmcv.__version__)\n\n\nassert (mmcv_version >= digit_version(mmcv_minimum_version)\n        and mmcv_version <= digit_version(mmcv_maximum_version)), \\\n    f'MMCV=={mmcv.__version__} is used but incompatible. ' \\\n    f'Please install mmcv>={mmcv_minimum_version}, <={mmcv_maximum_version}.'\n\nmmdet_minimum_version = '2.24.0'\nmmdet_maximum_version = '3.0.0'\nmmdet_version = digit_version(mmdet.__version__)\nassert (mmdet_version >= digit_version(mmdet_minimum_version)\n        and mmdet_version <= digit_version(mmdet_maximum_version)), \\\n    f'MMDET=={mmdet.__version__} is used but incompatible. ' \\\n    f'Please install mmdet>={mmdet_minimum_version}, ' \\\n    f'<={mmdet_maximum_version}.'\n\nmmseg_minimum_version = '0.20.0'\nmmseg_maximum_version = '1.0.0'\nmmseg_version = digit_version(mmseg.__version__)\nassert (mmseg_version >= digit_version(mmseg_minimum_version)\n        and mmseg_version <= digit_version(mmseg_maximum_version)), \\\n    f'MMSEG=={mmseg.__version__} is used but incompatible. ' \\\n    f'Please install mmseg>={mmseg_minimum_version}, ' \\\n    f'<={mmseg_maximum_version}.'\n\n__all__ = ['__version__', 'short_version']\n"
        }
    ]
}